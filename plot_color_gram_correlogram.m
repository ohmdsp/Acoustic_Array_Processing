function plot_color_gram_correlogram(gram,data1,data2,Fs,interval,n_step,int_overlap,titletext)% Filename:         Array_correlogram.m% Author:           D.R.Ohm   % Software:         Matlab 7.01% Rev.Date:         June 21, 2005%% Computes the 2-D correlogram Representation using % acoustic array input data%% gram --  a 2-D array of values from TFA_Analysis_complex script, %          arranged by columns of frequency bins vs rows of the center %          analysis time values; each row contains all the frequency bins %          corresponding to a center times. Thus a row index corresponds%          to particular center time and a column index corresponds to a%          particular frequency bin in Hz.% data --  The original data array (data must be complex-valued)% Fs --    The sampling rate in samples per second (Hz)% interval --  The analysis interval used to create gram, in number of%              samples (use same value as entered in the%              TFA_Analysis_complex script% int_overlap  --  The overlap between analysis center times, in number of%                  samples.% titletext -- Title of gram plot entered between quotes ('STFT ...')%==========================================================================%==========================================================================Ts=1/Fs;    % sampling interval in sec [n_rows,n_cols]=size(gram);log_gram = gram;dB_top = input('Enter top range in dB for bottom spectrum plot (example: 0dB): ');dB_bottom = input('Enter bottom range in dBfor bottom spectrum plot (example: 45dB): ');selection = input('Enter 0 for gray scale, 1 for color scale: ');%-Plot Titlefig1 = figure('PaperOrientation','portrait',...              'PaperPosition',[1.1,1,6.5,9],...              'Position',[10,10,820,620],...              'Units','pixel');p_axis = (-n_cols/2:n_cols/2)*Ts;pmax = p_axis(end);                     % max lag in sectc_axis = (0:n_rows-1)*(n_step)*Ts;tcmax = Ts*(n_rows-1)*(n_step);          % max center time in sec axwidth = .64;ax_title = axes('Position',[.3,.97,axwidth,1],...                'Units','normalized',...                'Visible','off');title_text = text('Position',[.42,0],...                  'Units','normalized',...                  'FontSize',[14],...                  'HorizontalAlignment','center',...                  'VerticalAlignment','bottom',...                  'String','CORRELOGRAM ANALYSIS');% Time-vs-frequency gram plotaxbottom = .2;axheight = .73;tc_spacing = 5;%.1*tcmax/2;  % spacing between time ticks in msp_spacing = .2*pmax;   % spacing between freq ticks in kHznt_tick = (tcmax/tc_spacing);YY = tc_spacing*(0:nt_tick);nf_tick = (pmax/p_spacing);XX = p_spacing*(-nf_tick:nf_tick)';ax1 = axes('Position',[.25,axbottom,axwidth,axheight],...           'Units','normalized',...           'FontSize',[12],...           'Box','on',...           'TickDir','out',...           'NextPlot','add',...           'XGrid','off',...           'XLim',[-pmax,pmax],...           'YLim',[0,tcmax],...           'YTick',YY,...           'XTick',XX);%selection=1;if selection == 0    colormap(gray(256));else    map = hsv(329);    colormap(map(256:-1:1,:));endset(ax1,'FontSize',[9])xlabel('Lag (sec)')ylabel('Center Time of Analysis Window (sec)')title(titletext)imagesc(p_axis,tc_axis,real(log_gram))%- Signal-vs-time plots to left of time-vs-frequency gram plot%-channel 1data_max = max(abs(data1));ax2 = axes('Position',[.02,axbottom,.06,axheight],...           'Units','normalized',...           'Box','on',...           'NextPlot','add',...           'FontSize',[10],...           'XLim',[-data_max,data_max],...           'XDir','reverse',...           'YTickLabelMode','manual',...           'YTickLabel',[],...           'YLim',[0,tcmax]);   t_axis = (1:length(data1))*Ts;plot(real(data1),t_axis,'k')xlabel('Ch 2')    %-channel 2     data_max = max(abs(data2));ax2 = axes('Position',[.10,axbottom,.06,axheight],...           'Units','normalized',...           'Box','on',...           'NextPlot','add',...           'FontSize',[10],...           'XLim',[-data_max,data_max],...           'XDir','reverse',...           'YTickLabelMode','manual',...           'YTickLabel',[],...           'YLim',[0,tcmax]);   t_axis = (1:length(data2))*Ts;plot(real(data2),t_axis,'k')xlabel('Ch 1')%-Long term FFT of data on bottom of time-vs-frequency gram plotdata = data1;fmax = Fs/2;fft_size = 2^ceil(log(length(data))/log(2));dB_range = dB_bottom;if any(any(imag(data)~=0))    tfr_long = flipud(perogram(fft_size,1,0,length(data),1,data));    freq_axis = (-fft_size/2:fft_size/2-1)*(Fs/(fft_size));    fmax_fft = -fmax;else     tfr_long = (perogram(fft_size,1,0,length(data),1,data));    n_tfr= length(tfr_long);    tfr_long = flipud(tfr_long(1:(n_tfr/2)));    freq_axis = (0:fft_size/2-1).*(Fs/(fft_size));    fmax_fft = 0;endax4 = axes('Position',[.25,.035,axwidth,.09],...           'Units','normalized',...           'Box','on',...           'NextPlot','add',...           'FontSize',[10],...           'TickDir','in',...           'XTickLabelMode','manual',...           'XTickLabel',[],...           'XLim',[fmax_fft,fmax],...           'YLim',[-dB_range,5]);   tfr_norm = tfr_long./(max(tfr_long));log_tfr = 10*log10(tfr_norm);vec = find(log_tfr < (-dB_range));log_tfr(vec) = -dB_range*ones(size(vec));plot(freq_axis,log_tfr,'k')ylabel('Spectrum(dB)')%-Color bar legend on left bottomax5 = axes('Position',[.02,.07,.10,.03],...           'Units','normalized',...           'Box','on',...           'NextPlot','add',...           'FontSize',[9],...           'YLim',[1,2],...           'TickDir','out',...           'YTickLabelMode','manual',...           'YTickLabel',[],...           'XLim',[-dB_bottom,-dB_top]);vec = (-dB_bottom:-dB_top)';barr = [vec vec]';imagesc((-dB_bottom:-dB_top),(1:2),barr)xlabel('dB colormap')