function plot_color_gram_STFT(gram,data,Fs,int_overlap,titletext)%% Author D.R.Ohm% Rev: Sept.3,2004; Mar.1,2021%% gram --  a 2-D array of values from TFA_Analysis_complex script, %          arranged by columns of frequency bins vs rows of the center %          analysis time values; each row contains all the frequency bins %          corresponding to a center times. Thus a row index corresponds%          to particular center time and a column index corresponds to a%          particular frequency bin in Hz.% data --  The original data array (data must be complex-valued)% Fs --    The sampling rate in samples per second (Hz)% % int_overlap  --  The overlap between analysis center times, in number of%                  samples.% =========================================================================ep = 1.0e-16;Ts = 1/Fs;                 [n_rows,n_cols] = size(gram);[M,N]=size(data);%-Compute magnitude and log for tf gramsgram = abs(gram);max_gram        = max(max((gram)));log_gram        = 10*log10((gram)/max_gram + ep); dB_top          = input('Enter top range in dB (example: 0): ');dB_bottom       = input('Enter bottom range in dB (example: 50): ');vec             = find(log_gram < (-dB_bottom));log_gram(vec)   = -dB_bottom*ones(size(vec));vec = find(log_gram > (-dB_top));log_gram(vec)   = -dB_top*ones(size(vec));selection = input('Enter 0 for gray scale, 1 for color scale: ');%-Plot Titlefigure('PaperOrientation','portrait',...              'PaperPosition',[1.1,1,6.5,9],...              'Position',[500,500,820,620],...              'Units','pixel');fmax = Fs/2/1000;               % max frequency in kHztmax = n_rows*int_overlap*Ts;                 % max time in sec f_axis = 1/1000*(0:n_cols/2)*(Fs/n_cols);  % freq vector in kHzt_axis = (1:n_rows)*int_overlap*Ts;axwidth = .78;axes('Position',[.2,.97,axwidth,1],...                'Units','normalized',...                'Visible','off');% Figure titletext('Position',[.5,0],...                  'Units','normalized',...                  'FontSize',[14],...                  'HorizontalAlignment','center',...                  'VerticalAlignment','bottom',...                  'String','TIME - VS - FREQUENCY  ANALYSIS  GRAM (STFT)');%-Time-vs-frequency gram plotaxbottom = .19;axheight = .73;axes('Position',[.20,axbottom,axwidth,axheight],...           'Units','normalized',...           'FontSize',[10],...           'Box','on',...           'TickDir','out',...           'NextPlot','add',...           'XGrid','off',...           'XLim',[0,fmax],...           'YLim',[0,tmax]);                 if selection == 0    colormap(gray(256));else    map = hsv(329);    colormap(map(256:-1:1,:));endtitle(titletext)xlabel('Frequency  (kHz)')ylabel('Center Time of Analysis Window  (sec)')imagesc(f_axis,t_axis,log_gram)%-Signal-vs-time plot to left of time-vs-frequency gram plotdata_max = max(abs(data));axes('Position',[.01,axbottom,.075,axheight],...           'Units','normalized',...           'Box','on',...           'NextPlot','add',...           'FontSize',[9],...           'XLim',[-data_max,data_max],...           'XDir','reverse',...           'YTickLabelMode','manual',...           'YTickLabel',[],...           'YLim',[0,tmax]);    t_axis = (0:length(data)-1)*Ts;plot(real(data),t_axis,'k')xlabel('Input')% %-Signal-vs-time plot to right of time-vs-frequency gram plot% % data_max = max(abs(data));% axes('Position',[.88,axbottom,.075,axheight],...%            'Units','normalized',...%            'Box','on',...%            'NextPlot','add',...%            'FontSize',[9],...%            'XLim',[-data_max,data_max],...%            'XDir','reverse',...%            'YTickLabelMode','manual',...%            'YTickLabel',[],...%            'YLim',[0,tmax]);%     % t_axis = (1:length(data))*Ts;% plot(imag(data),t_axis,'k')% xlabel('Quad-Phase')%-Long term FFT of data record plot on bottom of time-vs-frequency gram plotfmax = Fs/2;fft_size = 2^ceil(log(length(data))/log(2));dB_range = dB_bottom;if any(any(imag(data)~=0))    tfr_long = flipud(perogram(fft_size,1,0,length(data),1,data));    freq_axis = (-fft_size/2:fft_size/2-1)*(Fs/(fft_size));    fmax_fft = -fmax;else     tfr_long = (perogram(fft_size,1,0,length(data),1,data));    n_tfr= length(tfr_long);    tfr_long = flipud(tfr_long(1:(n_tfr/2)));    freq_axis = (0:fft_size/2-1).*(Fs/(fft_size));    fmax_fft = 0;endaxes('Position',[.20,.03,axwidth,.09],...           'Units','normalized',...           'Box','on',...           'NextPlot','add',...           'FontSize',9,...           'TickDir','in',...           'XTickLabelMode','manual',...           'XTickLabel',[],...           'XLim',[fmax_fft,fmax],...           'YLim',[-dB_range,5]);    tfr_norm = tfr_long./(max(tfr_long));log_tfr = 10*log10(tfr_norm);vec = find(log_tfr < (-dB_range));log_tfr(vec) = -dB_range*ones(size(vec));plot(freq_axis,log_tfr,'k')ylabel('Spectrum (dB)')%-Color bar legend on left bottomaxes('Position',[.01,.07,.10,.03],...           'Units','normalized',...           'Box','on',...           'NextPlot','add',...           'FontSize',[9],...           'YLim',[1,2],...           'TickDir','out',...           'YTickLabelMode','manual',...           'YTickLabel',[],...           'XLim',[-dB_bottom,-dB_top]);vec = (-dB_bottom:-dB_top)';barr = [vec vec]';imagesc((-dB_bottom:-dB_top),(1:2),barr)xlabel('dB colormap')